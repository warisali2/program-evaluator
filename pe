#!/bin/bash

# Program Name: pe
# Title: Program Evaluator

# Purpose: Evalute the program for given input and compare the results with the required output. This script is written
# keeping Compettive Programming Competitions in mind.

#-------------------------------------------------------------------------------------------------------------------------

#Functions

usage () {
	cat <<- eof
	
	Program Name: pe
	Title: Program Evaluator
	Usage: pe PROGRAM INPUT_FILE OUTPUT_FILE

	Purpose: Evalute the program for given input and compare the results with the required output. This script is written
	keeping Compettive Programming Competitions in mind.

	Note: use -h for help.
	
	eof
}

# debug function

log () {
	echo "Debug: $1"
}

# validating correct number of positional parameters

#log "Number of parameters = $#"

if [[ "$1" == "-h" ]]; then
	usage
	exit 0;
fi

if [[ $# != 3 ]]; then
	usage 1>&2
	exit 1
fi

# Variables
program=$1
input=$2
output=$3
programOutput=temp-output.txt

#log "Program = $program"
#log "input = $input"
#log "output = $output"

# validating variables and their respective permissions

#log "Validating program variable"

if [[ ! -x $program ]]; then
	echo "pe: Cannot execute '$program' or file does not exists" 1>&2
	exit 2 
fi

#log "program variable validated"
#log "validating input variable"

if [[ ! -r $input ]]; then
	echo "pe: Cannot read '$input' or file does not exists" 1>&2
	exit 3
fi

#log "input variable validated"
#log "validating output variable"

if [[ ! -r $output ]]; then
	echo "pe: Cannot read '$output' or file does not exists" 1>&2
	exit 4
fi

#log "output variable validated"

# Creating temp-output.txt file in temp directory

#log "creating tmp output file"

touch "/tmp/$programOutput"

if [[ ! -w /tmp/$programOutput ]]; then
	#log "cant create tmp output file"
	exit -1
fi

#log "tmp file created successfully"

# Executing the PROGRAM while redirecting input and output to respective files

#log "executing the program with redirected io"

$program < $input > /tmp/$programOutput

#log "program executed successfully"

# comparing output files and displaying output

lines=$(wc -l $input)
lines=${lines%%" $input"}

#log "lines = ${lines}s"
#log "lines sequence = $(echo {0..$lines})"

red='\033[37;41m'
brown='\033[0;33m'
green='\033[37;42m'

echo -e "\n${brown}Input\tOutput\tProgram Output"

#for n in {0..$lines};
for (( n = 0; n < $lines; ++n));
do
	IFS='' read -r i <&3
	IFS='' read -r o <&4
	IFS='' read -r po <&5 

	color=

	if [[ "${o}" == "${po}" ]]; then
		color=$green
	else
		color=$red
	fi

	echo -e "${color}${i}\t${o}\t${po}\033[0m"

done 3<$input 4<$output 5</tmp/$programOutput

echo -e "\033[0m"
